/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/backlight.h>

#define NAV_L 1
#define NUM_L 2
#define MED_L 3
#define FUN_L 4

/ {
    tap_dances {
    	shifty: shift_caps_word {
		compatible = "zmk,behavior-tap-dance";
		label = "TD_SHIFTY";
		#binding-cells = <0>;
		tapping-term-ms = <150>;
		bindings = <&kp LSHFT>, <&caps_word>;
	};
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
	tri {
	    if-layers = <NUM_L NAV_L>;
	    then-layer = <MED_L>;
        };
    };
    combos {
        compatible = "zmk,combos";

	l_curly_bracket {
	    timeout-ms = <50>;
            key-positions = <2 14>;
            bindings = <&kp LS(LBKT)>;
	    layers = <NUM_L>;
	};

	r_curly_bracket {
	    timeout-ms = <50>;
            key-positions = <4 16>;
            bindings = <&kp LS(RBKT)>;
	    layers = <NUM_L>;
	};
	lbracket {
	    timeout-ms = <50>;
            key-positions = <14 26>;
            bindings = <&kp LBKT>;
	    layers = <NUM_L>;
	};

	rbracket {
	    timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&kp RBKT>;
	    layers = <NUM_L>;
	};

	ques_mark_combo {
	    timeout-ms = <50>;
            key-positions = <21 33>;
            bindings = <&kp LS(FSLH)>;
	};

	bslash_combo {
	    timeout-ms = <50>;
            key-positions = <10 22>;
            bindings = <&kp BSLH>;
	};

	fslash_combo {
	    timeout-ms = <50>;
            key-positions = <22 34>;
            bindings = <&kp FSLH>;
	};

	bootloader_combo {
	    timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&bootloader>;
	    layers = <MED_L>;
	};

    };


        keymap {
                compatible = "zmk,keymap";

#ifdef QWERTY_BASE
        qwerty_layer {
            label = "Qwerty";
            bindings = <
                &kp ESC		&kp N1		&kp N2		&kp N3		&kp N4		&kp N5				&kp N6		&kp N7		&kp N8		&kp N9		&kp N0		&kp BSPC
                &kp TAB		&kp Q		&kp W		&kp E		&kp R		&kp T				&kp Y		&kp U		&kp I		&kp O		&kp P    	&trans
                &kp LSHFT	&kp A           &kp S		&kp D    	&kp F		&kp G				&kp H		&kp J		&kp K		&kp L		&kp SEMI	&kp FSLH
                &kp LCTRL	&kp Z		&kp X		&kp C		&kp V		&kp SPACE	&kp C_MUTE	&trans		&kp B		&kp N		&kp M		&kp COMMA	&kp DOT	
            >;
        };
#else
        colemak_dhm_layer {
            label = "Base";
            bindings = <
                &kp ESC		&kp N1		&kp N2		&kp N3		&kp N4		&kp N5				&kp N6		&kp N7		&kp N8		&kp N9		&kp N0		&kp BSPC
                &kp TAB		&kp Q		&kp W		&kp E		&kp R		&kp T				&kp Y		&kp U		&kp I		&kp O		&kp P    	&trans
                &kp LSHFT	&kp A           &kp S		&kp D    	&kp F		&kp G				&kp H		&kp J		&kp K		&kp L		&kp SEMI	&kp FSLH
                &kp LCTRL	&kp Z		&kp X		&kp C		&kp V		&kp SPACE	&kp C_MUTE	&trans		&kp B		&kp N		&kp M		&kp COMMA	&kp DOT	
            >;
        };
#endif

        nav_layer {
            label = "Nav";
            bindings = <
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&kp UARW	&trans
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&kp LARW	&kp DARW	&kp RARW
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &trans		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4			&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans	 	&bt BT_PRV 	&bt BT_NXT			&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&bt BT_CLR	&trans		&trans    	&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
            >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
            >;
        };

	};
};
