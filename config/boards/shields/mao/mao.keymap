/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define FRST  0
#define SCND  1
#define THRD  2
#define FRTH  3


/ {

    combos {
        compatible = "zmk,combos";

	combo_fourth {
	    timeout-ms = <50>;
            key-positions = <5 6>;
            bindings = <&to 3>;
		layers = <FRST>;
	};

	combo_delete {
	    timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp DEL>;
		layers = <FRST>;
	};
	combo_save {
	    timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LC(S)>;
		layers = <FRST>;
	};
	combo_cmd {
	    timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
		layers = <FRST>;
	};
	combo_enter {
	    timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ENTER>;
		layers = <FRST>;
	};

    };


        keymap {
                compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
                &kp ESC		&kp N1		&kp N2		&kp N3		&kp N4		&kp N5				&kp N6		&kp N7		&kp N8		&kp N9		&kp N0		&kp BSPC
                &kp TAB		&kp Q		&kp W		&kp E		&kp R		&kp T				&kp Y		&kp U		&kp I		&kp O		&kp P    	&kp RALT
                &kp LSHFT	&kp A           &kp S		&kp D    	&kp F		&kp G				&kp H		&kp J		&kp K		&kp L		&kp SEMI	&kp FSLH
                &kp LCTRL	&kp Z		&kp X		&kp C		&kp V		&lt THRD SPACE	&kp C_MUTE	&lt SCND SPACE	&kp B		&kp N		&kp M		&kp COMMA	&kp DOT	
            >;
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&trans		&kp UP		&trans
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&kp LEFT	&kp DOWN	&kp RIGHT
                &trans		&trans		&trans		&trans		&trans		&trans				&trans		&trans		&trans		&kp END		&trans		&kp HOME
                &trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
            >;
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans		&kp F1		&kp F2		&kp F3		&trans		&trans				&trans		&trans		&trans		&kp LBKT	&kp RBKT	&trans
                &trans		&kp F4		&kp F5		&kp F6		&trans		&trans				&trans		&trans		&trans		&kp MINUS	&kp EQUAL	&trans
                &trans		&kp F7		&kp F8		&kp F9		&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&kp F10		&kp F11		&kp F12		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans		&trans
            >;
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        configuration_layer {
            label = "Configuration";
            bindings = <
                &trans		&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&out OUT_BLE	&out OUT_USB			&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&bt BT_CLR	&out OUT_TOG			&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans    	&trans		&trans				&trans		&trans		&trans		&trans		&trans		&trans
                &trans		&trans		&trans		&trans		&trans		&trans		&to 0		&trans		&trans		&trans		&trans		&trans		&trans
            >;
      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

	};
};
